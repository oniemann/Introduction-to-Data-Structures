head	1.6;
access;
symbols;
locks;
comment	@# @;


1.6
date	2013.03.28.23.57.36;	author -;	state -;
branches;
next	1.5;

1.5
date	2013.03.28.23.56.48;	author -;	state -;
branches;
next	1.4;

1.4
date	2013.03.28.23.56.10;	author -;	state -;
branches;
next	1.3;

1.3
date	2013.03.28.23.55.28;	author -;	state -;
branches;
next	1.2;

1.2
date	2013.03.28.23.54.28;	author -;	state -;
branches;
next	1.1;

1.1
date	2011.08.19.00.54.24;	author -;	state -;
branches;
next	;


desc
@@


1.6
log
@-
@
text
@// $Id: integerarg.java,v 1.5 2013-03-28 16:56:48-07 - - $

// One student's README asks:
// Tell me how to use integers as arguments for java programs plz?
// Here is the solution to that.

import static java.lang.System.*;
class integerarg {
   public static void main (String[] args) {
      for (int argi = 0; argi < args.length; ++argi) {
         try {
            int value = Integer.parseInt (args[argi]);
            out.printf ("OK: %s: is the integer %d%n",
                        args[argi], value);
         }catch (NumberFormatException error) {
            out.printf ("NumberFormatException: %s: %s%n", args[argi],
                        error.getMessage());
         }
      }
   }
}

/*
//TEST// integerarg -55 0777 0x23 123foo hello 5563 9876543210 \
//TEST//            >integerarg.out
//TEST// mkpspdf integerarg.ps integerarg.java* integerarg.out
*/

@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: integerarg.java,v 1.4 2013-03-28 16:56:10-07 - - $
d23 3
a25 1
//TEST// integerarg -5 0777 0x23 123foo hello 5563 9876543210 >integerarg.out
d27 1
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: integerarg.java,v 1.3 2013-03-28 16:55:28-07 - - $
d23 1
a23 1
//TEST// integerarg -5 123foo hello 5563 9876543210 >integerarg.out
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: integerarg.java,v 1.2 2013-03-28 16:54:28-07 - - $
d16 1
a16 1
            out.printf ("Error: %s: %s%n", args[argi],
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id$
d23 1
a23 1
//TEST// integerarg -5 123foo hello 5563 9876543210>integerarg.out
@


1.1
log
@-
@
text
@d1 2
d23 3
@
